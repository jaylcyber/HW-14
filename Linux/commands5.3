#!/bin/bash

# all logs stored in /var/log
# /var/log/auth.log stores all login attempts, detects user authorization mechanism and brute force attacks
# /var/log/cron.log stores cron jobs success or errors, checks error messages when a cron job fails

# 4 categories of logs
# application logs: store alerts generated by system software used by user
# event logs: store security related events - success or fail to log in or install unauthorized software
# service logs: store system services such as cron jobs and print jobs
# system logs: store system events such as boot messages, kernel errors or system hardware

# journalctl filters through system logs and return specific results
# systemd is a daemon to log system events, not display reader-friendly log
# journald collects and stores log info in a structured indexed format
# journalctl allows access the journald and filter out info
journalctl               # returns entire massive system log contents
journalctl --list-boots  # displays lines for each individual boots
journalctl -b            # display messages from specific boots
journalctl --since yesterday 
journalctl --until "2 hours ago"
journalctl -u cron       # fileter for cron services
journalctl -p err -b 10  # -p (filter based on msg priority), err (priority level 3), -10 (boot ID)
journalctl --vaccum-size=5M  # remove archived logs until occupied disc space falls below 5M
journalctl --vaccum-time=2years  # remove archived logs until none is older than 2 years
journalctl --vaccum-files=50  # remove journal files so that the number stays below 50


# rsyslog records log messages from different areas of Linux and routes them to the right place in /var/log
# filter logs based on different priority levels for individual servers
# can send log messages to specfic directories as in rsyslog config file, /etc/rsyslog.d/50-default.conf

# selector (facility . priority) says where msg is from and which level of priority msg, action says where to
sshd.emerg                                                                              /var/log/sshd.log
cron.* var/log/cron.log # clock daemon related msg with all level priority to go to var/long/cron.log
auth.!info /var/log/mail.log # rsyslog not to log info messages from auth to /var/log/mail.log

# facility type
auth    # security/authorization messages
kern    # kernel messages
cron    # clock daemon related
daemon  # system daemon 
user    # user-level messages
security 
mail
# priority type
emerg   # system unusable  
alert   # immediate action
crit    # critical condition
err     # error condition
warn    
notice
info
debug   # debug level messages


# Activity 1

grep Storage /etc/systemd/journald.conf  # check if journalctl is running

sudo journalctl -u cron -S yesterday   # check logs for all cron jobs since yesterday
 
sudo journalctl -u systemd-journald   # check current system disk usage for sytemd-journald 

systemctl status rsyslog       # check if rsyslog (service) is running

sudo service rsyslog stop      # stop rsyslog service

nano /etc/rsyslog.d/50-default.conf  # edit rsyslog config file to create crete new log (uncomment cron.*)

sudo service rsyslog start     # start rsyslog service

ls /var/log | grep cron        # verify cron.log exists


#######################################################################################################3

# Managing Log Size using logrotate
# logrotate archiving a log once it reaches a specific size and rotating it out with a new empty log
# /etc/logrotate.conf has the options, parameters, and spec of which logs to rotate
/var/log/apach2/*.log {
  daily              # frequency
  missingok          # go to the next one if the file is missing
  rotate 14          # number of rotation before a log removed
  compress           # gzip by default
  delaycompress      # postpone compression till next rotation cycle
  notifempty         # do not rotate if it is empty
  endscript
  }
 

# Activity 2

logrotate                # check the version 
ls /etc/logrotate.d      # list to see what config files exist 
nano /etc/logrotate.conf # configure the parameters for logrotate
logrotate -vf /etc/logrotate.conf  # force logrotate 


#######################################################################################################3

# Log Audit
# auditd is a kernel level subsystem that watch every system call an application makes.
# kernel is the core components of OS
# system call is when application/program or software makes a request for system resources

# reporting tools: ausearch, aureport, aulast
# ausearch: query auditd deaemon logs 
# aureport: summarizes various types of events
# auditctl: configures, enables/disables auditd, load and list rules and generates status reports

# Activity 3

sudo apt install auditd -y      # install auditd
systemctl status auditd         # verify auditd (service) is running
sudo su                         # switch to root user
nano /etc/audit/auditd.conf     # configure

sudo auditctl -l                # list auditd rules
sudo nano /etc/audit/rules.d/audit.rules  # create a rule 
sudo systemctl restart auditd   # restart auditd daemon 
sudo auditctl -l                # list auditd rules to verify the new rules are added

sudo aureport -au               # show authentication report
sudo useradd criminal           # make change to show
sudo aureport -m                # show modified report

